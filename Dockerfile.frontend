# Frontend + Node.js Backend Dockerfile
FROM node:18-alpine AS frontend-builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy frontend source
COPY client/ ./client/
COPY shared/ ./shared/
COPY tsconfig.json ./
COPY vite.config.ts ./
COPY tailwind.config.ts ./
COPY postcss.config.js ./
COPY components.json ./

# Build frontend only
RUN npx vite build

# Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Install curl for health checks
RUN apk add --no-cache curl

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies for vite)
RUN npm ci

# Copy backend source
COPY server/ ./server/
COPY shared/ ./shared/
COPY tsconfig.json ./

# Copy client files (needed for development server)
COPY client/ ./client/

# Copy built frontend from build stage
COPY --from=frontend-builder /app/dist ./dist

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Change ownership
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:5000/ || exit 1

# Build and start server in production mode
CMD ["sh", "-c", "npx esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist && NODE_ENV=production node dist/index.js"] 